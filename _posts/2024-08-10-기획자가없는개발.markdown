---
layout: post
title:  "기획자가 없는 개발"
date:   2024-08-15 00:00:00 +0900
categories: 
---

 내가 소속한 팀은 2024년에 신규로 생성된 팀이다. 팀은 5명으로 구성되어있는데 이중 개발을 담당하는 사람은 팀장을 제외하여 총 2명이다. 1년차 이하 신입개발자 2명이 각각 프론트엔드와 백엔드를 담당하고 있다. 그리고 팀장은 좀더 역량이 도메인에 좀 더 가깝다. 보통의 요구사항은 팀장을 통해서 우리에게 전달되는데 UI 예시를 PPT로 전달받는다. 그 슬라이드 노트에 이런 저런 설명을 적거나 구두로 전달해주는 편이다. 개발을 하기에는 조금 기획서가 부실한 경우가 많은데 팀장은 개발이 아니라 운영을 주로 맡고 있고 사업팀을 비롯한 여러 업무에 대해서 모두 관리를 해야하기 때문에 그럴 여력이 부족하다. 우리팀에는 따로 기획자가 없기 때문에 다소 "애자일"하게 프론트, 백엔드 개발자가 그 요구사항을 함께 듣고 나서 요구사항을 분석하고 화면, 기능, 로직 등을 구현해 나가는 방식으로 개발을 한다. 
 
 나는 의도적으로 그러는 것은 아니지만 팀장의 PPT에 설명이 부족한 것이 있거나 도메인 엔티티의 라이크 사이클이 제대로 설명되지 않거나 워크플로우나 유즈케이스가 끊기는 등의 설계적 문제가 있을 때마다 다소 적극적으로 피드백을 주고 받으며 요구사항을 최대한 구체화하는 편이 개발하기에 좋아서 그렇게 하는 편이다. 문제는 동료 프론트 개발자는 다소 수동적이라는 점이다. 함께 요구사항에 대해 전달받게 되는 자리에서 프론트개발자는 좀처럼 입을 열지 않는다. 뒤늦게 프론트 개발자는 팀장이나 나에게 회의에서 결정한 사항에 대해서 다시 물어 보는 뒷북을 치는 편이 많았다. 
 
 그래서 나는 입사이레 프론트 개발자와 협업에서 개발 과제에 대한 동기화가 이뤄지지 않아서 답답함을 느꼈다. 나는 개발은 일사천리로 되었으면 하는 마음에 개발 과제 전반을 관리하고 끌고 나가게 되었다. 그러다 보니 조별과제 팀장처럼 혼자 이런 저런 일을 하며 개발 업무를 끌고 가고 있었다. 
 
 내가 생각하기에 프론트개발자 분께서는 좀 더 수동적인 방식에 익숙하신 분 같았다. 우선 요구사항이 잘 정리되고 정책이 잘 정의된 상태에서 개발 수행은 잘하시는 것 같았다. 그러나 문제는 우리팀, 우리 회사에는 잘 정리된 기획서를 전달해줄 기획자가 없다는 사실이다. 외부 요구사항은 구체적인 내용 없이 팀장에게 전달되는 경우가 많으며 구체적인 내용은 팀장, 나, 프론트엔드 개발자 이렇게 셋이서 어느 정도 정해야 한다는 것에 익숙하지 않은 듯 했다. 그러니까 프론트 개발자는 무엇을 판단하고 결정을 짓는 일, 선택한 것에 책임을 지는 일에 두려움을 느끼는 듯 했다. 그리고 나는 그런 프론트 개발자를 이해하지 못하고 어느 정도는 프론트 개발자가 의견을 내거나 결정을 해줄 사안을 내게 미루고 있다고 느꼈던 것 같다.
 
 내게 프론트 개발자에 대한 부정적인 감정이 쌓였고 지치기 시작했다. 그러다가 얼마전 회의가 끝나고나서 프론트 개발자에게 다소 감정적으로 다음과 같은 의사를 전달했다. 
 - 앞으로 팀장이나 다른 팀에서 전달받는 요구사항에 관련한 문서를 꼼꼼하게 읽고 잘못된 것이 있으면 빠르고 적극적으로 피드백을 해달라.
 - 프론트 개발을 함에 있어서 필요한 API에 대한 상의는 백엔드 개발자가 API를 만드는 시점보다 먼저 요청하셨으면 한다. 먼저 상의해야할 것이 있으면 먼저 좀 요청해달라.
 - 우리 팀에는 기획자가 없으니 각 개발자가 영역을 가리지 않고 요구사항 회의에 적극 참여해서 기획과 설계를 맡았으면 한다.
 나는 그 얘기를 하면서도 편한 마음이 들지 않았다. 내가 한 말에 대해서 프론트 개발자의 반응이 다소 답답하게 느껴졌기 때문이다. 

 그 얘기를 하고 시간이 지나 다음 주가 되었고 프론트 개발자가 먼저 얘기를 꺼내기에 이런 저런 얘기를 하면서 그날에 대한 얘기가 나왔고 나는 내가 지나치게 감정적으로 얘기한 것을 사과했다. 그리고 거기서 프론트 개발자에게 알게된 사실이 있었다. 프론트 개발자는 회의에서 나와 팀장이 도메인에 대해서 얘기하는 것에 약 40%는 이해를 못하는 것 같았다. 그러다보니 회의에서 말수가 없었던 것이다. 그리고 프론트 개발자는 이해가 느렸기 때문에 우선 구체적으로 UI 퍼블리싱을 먼저 한 후 팀장에게 모르는 부분을 물어보면서 요구사항과 개발과제를 이해하는 것 같았다. 프론트 개발자는 그래서 그렇게 퍼블리싱을 그리고 요구사항을 좀 이해한 후에야 어떤 API가 필요하고 어떤 상의가 필요한지 조금 알게 되는 듯 했다. 

 그에 비해서 나는 상대적으로 요구사항에 대한 이해가 빨라서 프론트 개발자의 속도는 너무 답답하고 일부러 일을 미루는 것이라고 생각한 것 같다. 이번 기회에 어느 정도 개인의 성향 차이에 대해서 이해하게 된 것 같아서 조금 다행이었다. 그리고 중요한 것은 앞으로 이런 일이 생겼을 때는 어떻게 할 것인지에 대해서다. 나는 그때 프론트 개발자의 말을 듣고 내 속도를 어느 정도는 프론트 개발자의 속도에 맞춰야겠다고 생각했다.

 애자일 방식은 각 분야의 팀원이 모두 함께 참여하여 고객지향적인 제품을 만들어 낸다. 애자일의 중요한 속성은 속도, 참여 같은 것들이고 나는 지금껏 그렇게 생각해왔으니 그게 이상적으로 생각했던 것 같다. 애자일 방식의 반대는 워터폴 방식인데 문뜩 이런 경험을 하고 느낀 것은 완전한 애자일 방식도 없고 완전한 워터폴 방식도 없다는 것이고 현실적으로는 현재 팀원의 포텐셜이나 성향 등에 많은 영향을 주고 받는 것 같다.

 물론 애자일 방식이 엄청 이상적이라서 좋긴한데 그것을 고집하는 것은 안 맞는 옷을 입는 것과 같았다. 나에게는 맞을지 몰라도 팀원에게 맞지 않는다면 그것은 팀워크가 아니라고 생각이 들었다. 프론트 개발자는 나에게 이렇게 제안했다. 어느정도 퍼플리싱이 끝난 후에 API에 대해서 얘기하면 좋겠다고. 절차지향적이라는 것이 아니라 팀원이 그렇게 해야 퍼포먼스를 잘 발휘할 수 있다고 하니 이상을 내려놓고 실현가능한 현실에 좀더 집중해야겠다고 생각했다. 

내가 그렇게 프론트 개발자의 방식을 받아들인 후에 조금 문제시 되는 것은 개발일정에 대한 부분이다. 아무래도 프론트 개발자가 원하는 방식은 개발일정에 딜레이가 발생할 수밖에 없다. 이번에 내가 다소 감정적으로 변한 것은 일주일만에 프론트, 백 개발이 완료되어야 했던 상황과 연관되어 있었다. 그런 일정을 주문한 것은 팀장이었고 그 배후에는 이런 저런 사정이 있었다. 다음주부터 UAT를 했어야 했으니까. 앞으로는 프론트 개발자가 퍼블리싱을 하고 요구사항에 대해 조금 이해를 하는 시간을 감안해서 팀장이 이런 일정이 가능한지 문의하는 것에 대해 잘 답변해야겠다고 생각했다. 그러니까 프론트 개발자에게 그게 가능할지 먼저 물어봐야겠다.

 한기용님의 영상을 요즘 보고 있는데 깨닫는 바가 많다. 좋은 영향력을 키우고 장기적인 관점에서 복리가 되는 행동을 선택하고 매사에 여유를 가질 것. 요즘 무리한 일정을 소화하느라 스트레스풀해 있던 나 자신을 돌아 보게 하는 좋은 얘기였다. 

 
















