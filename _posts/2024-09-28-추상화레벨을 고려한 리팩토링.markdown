---
layout: post
title:  "추상화 레벨을 고려한 리팩토링"
date:   2024-09-28 00:00:00 +0900
categories: 
---
상당히 길고 복잡한 기능을 수행하는 로직을 만들고 해당 로직을 담을 컴포넌트 빈을 만들었다. 최근 요구사항이 변경되면서 엔티티 설계가 함께 변경되었는데 이때 만든 로직이 스파게티코드처럼 수정이 어려웠다. 이때의 리팩토링의 경험을 공유해본다. 

첫번째 로직을 차례로 설명하면 이렇다.  

1. String type의 HTML fragment를 인자를 받는다. 이것은 Full HTML이 아니라 <div> 등에 포함될 본문과 같은 것이다. 이것은 게시글의 본문 영역에 해당되는 HTML 형식의 데이터다.
2. 본문에 포함된 내용 중 Base64로 인코딩된 이미지 태그를 검색한다. ex. \<img src="data:image/<이미지확장자>;base64,<data코드>")  
3. 이미지 태그에 있는 Base64를 디코딩하고 이미지 파일로 s3에 저장시킨다.
4. 저장시킨 정보로 s3파일정보를 저장할 파일 엔티티를 생성하고 랜덤한 Key를 생성한다.
5. 랜덤한 키를 기존 img 태그의 src attribute에 덮어씌운다.
6. 수정된 HTML fragment를 리턴한다.

두번째 로직은 다음과 같다.

수정된 html